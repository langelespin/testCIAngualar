name: Deploy prod site on push

on: 
  push:
    branches: 
      - main
      
jobs:
  # web-deploy:

  #   name: Deploy Angular App
  #   runs-on: ubuntu-latest

  #   env:
  #     SERVER: waws-prod-ln1-025.ftp.azurewebsites.windows.net

  #   steps:
  #   - name: Get latest code
  #     uses: actions/checkout@v2.3.2

  #   - name: Use Node.js 14 LTS
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'
      
  #   - name: Install NPM Modules
  #     run: npm install

  #   - name: Test app
  #     run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

  #   - name: Build Project
  #     run: npm run build
  #publicaci√≥n dockerhub
  # push_to_registry:
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: angelpin90/pokeapp

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: '14'
    - name: Install NPM Modules
      run: npm install

    - name: Test app
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

    - name: Build Project
      run: npm run build

    - name: Publish to Github Packages Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: langelespin/testCIAngualar/appsiir
        registry: docker.pkg.github.com
        username: ${{ secrets.USERNAME_GITHUB }}
        password: ${{ secrets.TOKEN_GITHUB }}
        dockerfile: Dockerfile
        tags: latest

    - name: Deploy package to digitalocean
      uses: appleboy/ssh-action@master
      env:
          USERNAME_GITHUB: ${{ secrets.USERNAME_GITHUB }}
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        envs: USERNAME_GITHUB, TOKEN_GITHUB
        script: |
          docker stop $(docker ps -a -q)
          docker login docker.pkg.github.com -u $USERNAME_GITHUB -p $TOKEN_GITHUB
          docker pull docker.pkg.github.com/langelespin/testciangualar/appsiir:latest
          docker run -dit -p 80:80 docker.pkg.github.com/langelespin/testciangualar/appsiir:latest
          